@import "../../bower_components/animate.css-scss/animate";

@import "vars";
@import "partials/animations";
@import "partials/fonts";

#container{
	position: fixed;
	top: 50%;
	left: 0;
	transform: translate(0, -60%);
	width: 100vw;
}

body{
	width: 100vw;
	height: 100vh;
	background-color: $background-color;
	margin: 0;
	overflow: hidden;
	&#dummy-page{
		position: relative;
		&::after, &::before{
			content: "";
			position: absolute;
			display: block;
		}
		&::before{
			width: 100%;
			height: 100%;
			background-image: radial-gradient(circle farthest-side at 100% 50%, $background-gradient-color 0%, transparent 100%),
				radial-gradient(circle closest-corner at 0% 0%, $background-gradient-color 0%, transparent 100%),
				radial-gradient(circle farthest-corner at 0% 100%, $background-gradient-color 0%, transparent 100%)
				;
			animation: dummy-background-aniamtion 3s;
			animation-iteration-count: infinite;
		}
		&::after{
			width: 90%;
			height: 90%;
			top:5%;
			left: 5%;
			border: 1px solid #fffae3;
			@include fadeIn(3000ms);
		}
	}
}

h1, h2 {
	text-align: center;
	font-family: 'bosun03';
	margin-bottom: 1.2em;
	margin-left: 10%;
	margin-right: 10%;
}
h1{
	font-size: 3em;
	color: #2f2f2f;
}
h2{
	font-size: 1.5em;
	color: #808080;
}

.type-animation-random-bounce{
	$duration: 1800ms;
	&:nth-child(2n+1){
		@include bounceInLeft($duration);
	}
	&:nth-child(2n+2){
		@include bounceInUp($duration);
	}
	&:nth-child(2n+3){
		@include bounceInDown($duration);
	}
	&:nth-child(2n+4){
		@include bounceInRight($duration);
	}
}

.type-animation-flip{
	$duration: 700ms;
	@include flip($duration);
	animation-name: flip, fadeIn;
	animation-duration: $duration, $duration/4;
	animation-timing-function: ease-in-out;
	&:nth-child(even){
		animation-direction: reverse, normal;
	}
}

.type-animation{
	span{
		display: inline-block;
	}
	&:not(.type-animation-init){
		$duration: 1000ms;
		&:nth-child(1){
			@include bounceInUp($duration, $duration/3);
		}
		&:nth-child(2){
			@include bounceInDown($duration,$duration);	
		}
	}
	&.type-animation-init{
		// opacity: 0;
		$comp-1-delay:0ms;
		$comp-2-delay: $comp-1-delay;

		&.comp-0{
			span{
				span{
					// animation-iteration-count: infinite !important;
				}
			}
			@for $i from 0 through 5 {
				.word-#{$i}{
					@for $j from 0 through 9 {
						.char-#{$j}{
							@extend .type-animation-random-bounce;
							$comp-1-delay: $comp-1-delay + $j*$i*20ms;
							animation-delay: $j*$i*10ms !important;
						}
					}
				}
			}
		}
		&.comp-1{
			span{
				span{
					// animation-iteration-count: infinite !important;
				}
			}
			@for $i from 0 through 7 {
				.word-#{$i}{
					@for $j from 0 through 6 {
						.char-#{$j}{
							@extend .type-animation-flip;
							animation-delay:$comp-1-delay/10 + $j*200ms + $i*200ms;
							$comp-2-delay: $comp-1-delay/10 + $comp-2-delay + $j*200ms + $i*200ms;
						}
					}
				}
			}
		}
		// total delay calculated
		&.comp-1{
			.word-_p_p_p{
				position: absolute;
				animation-name: smile;
				animation-delay:2.6s;
				animation-duration:1000ms;
			}
		}
		
	}
}



